var request = require('request');
var fs = require('fs')

var ak;
var aks;

exports.setup = function(credential) {

  ak = credential.access_key;
  aks = credential.access_secret;

}

exports.getApp = function() {

  var options = {
    uri:'/info/get_app',
    baseUrl:'https://apicn.faceplusplus.com/',
    qs:{
      api_key:ak,
      api_secret:aks
    }
  }

  return new Promise(function(resolve,reject){

    request.get(options,function(err,res,body){

      if (err) reject(err)

      if (!err) resolve(body)

    })

  })

}

exports.detect = function(file_name) {

  var buffer = fs.readFileSync(file_name)

  var options = {
    url:'/detection/detect',
    baseUrl:'https://apicn.faceplusplus.com/',
    timeout:5000
  }

  return new Promise(function(resolve, reject) {

    function errDiagnose(err) {

      if (err.code === "ETIMEDOUT") return "ETIMEDOUT"

      if (err.connect === true) return "RTIMEDOUT"

      if (err.error = "SERVER_TOO_BUSY") return "SERVER_TOO_BUSY"

      return err

    }

    var r = request.post(options,function(err,res,body){

      if (err) reject( errDiagnose(err) )

      if (!err) resolve(body)

    })

    var form = r.form()
    form.append('api_key',ak)
    form.append('api_secret',aks)
    form.append('img',buffer,file_name.match(/[^\/]{1,}\.jpeg$/)[0])

  })

}



exports.createPerson = function(person_name) {

  var options = {
    uri:'/person/create',
    baseUrl:'https://apicn.faceplusplus.com/',
    qs:{
      api_key:ak,
      api_secret:aks,
      person_name:person_name
    }
  }

  return new Promise(function(resolve, reject) {

    request.get(options,function(err,response,body){

      if (err) reject(err)

      if (!err) resolve(JSON.parse(body))

    })

  });

}

exports.deletePerson = function(person_name) {

  var options = {
    uri:'/person/delete',
    baseUrl:'https://apicn.faceplusplus.com/',
    qs:{
      api_key:ak,
      api_secret:aks,
      person_name:person_name
    }
  }

  return new Promise(function(resolve, reject) {

    request.get(options,function(err,response,body){

      if (err) reject(err)

      if (!err) resolve(body)

    })

  });

}

exports.identify = function(img_path,group_name){

  var buffer = fs.readFileSync(img_path)

  var options = {
    url:'/recognition/identify',
    baseUrl:'https://apicn.faceplusplus.com/',
    timeout:5000,
  }

  return new Promise(function(resolve, reject) {

    function errDiagnose(err) {

      if (err.code === "ETIMEDOUT") return "ETIMEDOUT"

      if (err.connect === true) return "RTIMEDOUT"

      return err

    }

    var r = request.post(options,function(err,res,body){

      if (err) reject( errDiagnose(err) )

      if (!err) resolve(JSON.parse(body));

    })

    var form = r.form()
    form.append('api_key',ak)
    form.append('api_secret',aks)
    form.append('group_name',group_name)
    form.append('img',buffer,img_path.match(/[^\/]{1,}\.jpeg$/)[0])

  })

}

exports.deleteGroup = function(group_name) {

  var options = {
    uri:'/group/delete',
    baseUrl:'https://apicn.faceplusplus.com/',
    qs:{
      api_key:ak,
      api_secret:aks,
      group_name:group_name
    }
  }

  return new Promise(function(resolve,reject){

    request.get(options,function(err,res,body){

      if (err) reject(err)

      if (!err) resolve(JSON.parse(body))

    })

  })

}
